@import "./pcp-variables";
@import "./pcp-compability";

@mixin slash($rotate-deg){
  position: absolute;
  display: block;
  background-color: $slash-color;
  height: 5px;
  width: $option-width;
  margin: 0 auto;
  top: 50%;
  z-index: 0;
  @include transform(translateY(-50%) rotate($rotate-deg));
}

@mixin centering($position, $direction){
	position: $position;
	@if $direction == hor { // align horizontally
		left: 0;
		right: 0;
		margin: auto;
	}
	@else if $direction == ver { // align vertically
		top: 50%;
    @include transform(translateY(-50%));
	}
	@else if $direction == both{ // align in both directions
		left: 0;
		right: 0;
		margin: auto;
		top: 50%;
    @include transform(translateY(-50%));
	}
}

.pcp-palette {
  margin: 0;
  padding: 10px 0;
  text-align: center;

  li {
    display: inline-block;
    position: relative;
    background-color: $pcp-palette-option-bg-color;
    width: $option-width;
    height: $option-width;
    border-radius: 50%;
    border: 1px solid $pcp-palette-option-border-color;
    margin: 0 10px;

    &:hover { cursor: pointer; }
		&:before, &:after { content: ""; }
    &.color-none {
			&:before { @include slash(45deg); };
			&:after { @include slash(-45deg); };
			background-color: $pcp-palette-option-bg-color;
      opacity: 0.2;
		}

    &.current-selection {
      box-shadow: 0 0 5px 3px $pcp-palette-option-active-border-color;
    }

    span {
      @include centering(absolute, both);
			z-index: 2;
    }
  }
}

.pcp-selector {
  @extend .pcp-palette;
  border-top: 1px solid $pcp-selector-seperator-color;
  li {
    &.color-none {
      opacity: 1;
    }
  }
}
